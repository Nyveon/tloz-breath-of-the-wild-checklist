[role="tabpanel"] li {
	//#region -- Layout, sizing and typography
	@include size($quest-card-width, $quest-card-height);
	padding-inline: $very-small;

	@include botw-border;
	background-color: $color-transparent-dark;
	opacity: 0.9;

	@include flex(row, flex-start, center);
	position: relative;
	overflow: hidden;

	cursor: pointer;

	img {
		$icon-size: $quest-card-height * 0.85;
		@include size($icon-size);
		user-select: none;
	}

	hgroup {
		margin-left: $very-small;
		text-align: left;
		font-weight: bold;
		user-select: none;

		h3 {
			line-height: 1.2em;
		}

		span {
			font-size: $medium * 0.9;

			@each $type, $color in $colors-quest {
				&.#{$type} {
					color: $color;
				}
			}
		}
	}

	&:not(:last-child) {
		margin-bottom: $very-small;
	}
	//#endregion

	//#region -- Hover triangles and outline
	&:hover {
		border-color: $color-primary;
		box-shadow: inset 0 0 10px 1px $color-white-glow,
			0 0 10px 1px $color-white-glow;

		div.top::before {
			@include corner-triangle(true, true);
		}

		div.top::after {
			@include corner-triangle(false, true);
		}

		div.bottom::before {
			@include corner-triangle(false, false);
		}

		div.bottom::after {
			@include corner-triangle(true, false);
		}
	}
	//#endregion

	//#region -- Completed effect
	&.completed {
		&:not(.checkbox-mode) {
			hgroup,
			img {
				filter: brightness(0.25);
			}
		}

		&.checkbox-mode h3 {
			text-decoration: line-through;
			text-decoration-thickness: 0.2em;
		}
	}

	&.spoiler:not(.completed) span {
		display: none;
	}
	//#endregion

	//#region -- Checkbox mode
	input[type="checkbox"] {
		margin-inline: $very-small;
		scale: 1.5;
	}

	@each $type, $color in $colors-quest {
		&.#{$type} input[type="checkbox"] {
			--check-color: #{$color};
		}
	}
	//#endregion

	//#region -- Shine swoosh animation
	$shine-width: 4em;

	&::before {
		@include absolute(0, 0, 0, -$shine-width);
		@include size($shine-width * 2.77, 100%);
		content: "";
		transform: translateX(-100%) rotate(45deg);
		background-color: white;
		transition: 0s ease-in-out;
	}

	&.completed::before {
		transform: translateX($quest-card-width + $shine-width) rotate(45deg);
		transition: 0.35s ease-in-out;
	}
	//#endregion

	//#region -- Responsiveness & Compact Mode
	&.compact {
		@include size($quest-card-width-small, $quest-card-height-small);

		hgroup {
			margin: 0;
			font-size: 0.85em;
		}

		img {
			display: none;
		}

		input[type="checkbox"] {
			margin-inline: 0 $very-small;
			scale: 1;
		}
	}

	@media screen and (max-width: $breakpoint-mobile) {
		&:not(.compact) {
			scale: 0.9;
			margin-bottom: 0;
		}
	}
	//#endregion
}
